{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,kBACzC,EAAkB,SAAS,aAAa,CAAC,kBAEzC,EAAQ,SAAS,aAAa,CAAC,eAErC,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAa,EAAG,EAAM,IAAI,EAEhC,GAAI,AAAqB,IAArB,EAAU,MAAM,CAAQ,CAC1B,EAAgB,eAAe,CAAC,YAGhC,IAAM,EAAY,AADE,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CACrB,SAAS,CAAC,CAAA,GAExC,EAAM,WAAW,CAAC,EACpB,MAAO,GAAI,EAAU,MAAM,CAAG,GAAK,EAAU,MAAM,CAAG,EAAG,CAEvD,IAAM,EAAY,AADE,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CACrB,SAAS,CAAC,CAAA,GAExC,EAAM,WAAW,CAAC,EACpB,KAAO,CAEL,IAAM,EAAY,AADE,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CACrB,SAAS,CAAC,CAAA,GAExC,EAAM,WAAW,CAAC,GAClB,EAAgB,YAAY,CAAC,WAAY,CAAA,EAC3C,CACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAa,EAAG,EAAM,IAAI,CAE5B,AAAqB,CAAA,IAArB,EAAU,MAAM,EAGlB,AAFoB,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CAEvC,MAAM,GAClB,EAAgB,YAAY,CAAC,WAAY,CAAA,IAChC,AAAqB,KAArB,EAAU,MAAM,EAGzB,AAFoB,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CAEvC,MAAM,GAClB,EAAgB,eAAe,CAAC,aAIhC,AAFoB,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CAEvC,MAAM,EAEtB,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAa,EAAG,EAAM,IAAI,CAE5B,AAAiC,CAAA,IAAjC,CAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAC9B,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,MAEpC,EAAI,WAAW,CAAC,EAClB,GACA,EAAgB,eAAe,CAAC,aACvB,AAAiC,IAAjC,CAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACrC,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,MAEpC,EAAI,WAAW,CAAC,EAClB,GACA,EAAgB,YAAY,CAAC,WAAY,CAAA,IAEzC,EAAU,OAAO,CAAC,SAAC,CADrB,EAEI,IAAM,EAAO,SAAS,aAAa,CAAC,MAEpC,EAAI,WAAW,CAAC,EAClB,EAEJ,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACxC,IAAM,EAAa,EAAG,EAAM,IAAI,CAE5B,AAAiC,CAAA,KAAjC,CAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAC9B,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAS,EAAG,EAAI,QAAQ,EAG9B,AAFqB,CAAK,CAAC,EAAM,MAAM,CAAG,EAAE,CAE/B,MAAM,EACrB,GACA,EAAgB,eAAe,CAAC,aACvB,AAAiC,IAAjC,CAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACrC,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAS,EAAG,EAAI,QAAQ,EAG9B,AAFqB,CAAK,CAAC,EAAM,MAAM,CAAG,EAAE,CAE/B,MAAM,EACrB,GACA,EAAgB,YAAY,CAAC,WAAY,CAAA,IAEzC,EAAU,OAAO,CAAC,SAAC,CADrB,EAEI,IAAM,EAAS,EAAG,EAAI,QAAQ,EAG9B,AAFqB,CAAK,CAAC,EAAM,MAAM,CAAG,EAAE,CAE/B,MAAM,EACrB,EAEJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar appendRowButton = document.querySelector(\".append-row\");\nvar deleteRowButton = document.querySelector(\".remove-row\");\nvar appendColButton = document.querySelector(\".append-column\");\nvar deleteColButton = document.querySelector(\".remove-column\");\nvar table = document.querySelector(\"table tbody\");\nappendRowButton.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(table.rows);\n    if (tableRows.length === 2) {\n        deleteRowButton.removeAttribute(\"disabled\");\n        var rowToAppend = tableRows[tableRows.length - 1];\n        var clonedRow = rowToAppend.cloneNode(true);\n        table.appendChild(clonedRow);\n    } else if (tableRows.length > 2 && tableRows.length < 9) {\n        var rowToAppend1 = tableRows[tableRows.length - 1];\n        var clonedRow1 = rowToAppend1.cloneNode(true);\n        table.appendChild(clonedRow1);\n    } else {\n        var rowToAppend2 = tableRows[tableRows.length - 1];\n        var clonedRow2 = rowToAppend2.cloneNode(true);\n        table.appendChild(clonedRow2);\n        appendRowButton.setAttribute(\"disabled\", true);\n    }\n});\ndeleteRowButton.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(table.rows);\n    if (tableRows.length === 3) {\n        var rowToDelete = tableRows[tableRows.length - 1];\n        rowToDelete.remove();\n        deleteRowButton.setAttribute(\"disabled\", true);\n    } else if (tableRows.length === 10) {\n        var rowToDelete1 = tableRows[tableRows.length - 1];\n        rowToDelete1.remove();\n        appendRowButton.removeAttribute(\"disabled\");\n    } else {\n        var rowToDelete2 = tableRows[tableRows.length - 1];\n        rowToDelete2.remove();\n    }\n});\nappendColButton.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(table.rows);\n    if (tableRows[0].children.length === 2) {\n        tableRows.forEach(function(row) {\n            var cell = document.createElement(\"td\");\n            row.appendChild(cell);\n        });\n        deleteColButton.removeAttribute(\"disabled\");\n    } else if (tableRows[0].children.length === 9) {\n        tableRows.forEach(function(row) {\n            var cell = document.createElement(\"td\");\n            row.appendChild(cell);\n        });\n        appendColButton.setAttribute(\"disabled\", true);\n    } else tableRows.forEach(function(row) {\n        var cell = document.createElement(\"td\");\n        row.appendChild(cell);\n    });\n});\ndeleteColButton.addEventListener(\"click\", function() {\n    var tableRows = _to_consumable_array(table.rows);\n    if (tableRows[0].children.length === 10) {\n        tableRows.forEach(function(row) {\n            var cells = _to_consumable_array(row.children);\n            var cellToRemove = cells[cells.length - 1];\n            cellToRemove.remove();\n        });\n        appendColButton.removeAttribute(\"disabled\");\n    } else if (tableRows[0].children.length === 3) {\n        tableRows.forEach(function(row) {\n            var cells = _to_consumable_array(row.children);\n            var cellToRemove = cells[cells.length - 1];\n            cellToRemove.remove();\n        });\n        deleteColButton.setAttribute(\"disabled\", true);\n    } else tableRows.forEach(function(row) {\n        var cells = _to_consumable_array(row.children);\n        var cellToRemove = cells[cells.length - 1];\n        cellToRemove.remove();\n    });\n});\n\n//# sourceMappingURL=index.22a7e90e.js.map\n","'use strict';\n\nconst appendRowButton = document.querySelector('.append-row');\nconst deleteRowButton = document.querySelector('.remove-row');\nconst appendColButton = document.querySelector('.append-column');\nconst deleteColButton = document.querySelector('.remove-column');\n\nconst table = document.querySelector('table tbody');\n\nappendRowButton.addEventListener('click', () => {\n  const tableRows = [...table.rows];\n\n  if (tableRows.length === 2) {\n    deleteRowButton.removeAttribute('disabled');\n\n    const rowToAppend = tableRows[tableRows.length - 1];\n    const clonedRow = rowToAppend.cloneNode(true);\n\n    table.appendChild(clonedRow);\n  } else if (tableRows.length > 2 && tableRows.length < 9) {\n    const rowToAppend = tableRows[tableRows.length - 1];\n    const clonedRow = rowToAppend.cloneNode(true);\n\n    table.appendChild(clonedRow);\n  } else {\n    const rowToAppend = tableRows[tableRows.length - 1];\n    const clonedRow = rowToAppend.cloneNode(true);\n\n    table.appendChild(clonedRow);\n    appendRowButton.setAttribute('disabled', true);\n  }\n});\n\ndeleteRowButton.addEventListener('click', () => {\n  const tableRows = [...table.rows];\n\n  if (tableRows.length === 3) {\n    const rowToDelete = tableRows[tableRows.length - 1];\n\n    rowToDelete.remove();\n    deleteRowButton.setAttribute('disabled', true);\n  } else if (tableRows.length === 10) {\n    const rowToDelete = tableRows[tableRows.length - 1];\n\n    rowToDelete.remove();\n    appendRowButton.removeAttribute('disabled');\n  } else {\n    const rowToDelete = tableRows[tableRows.length - 1];\n\n    rowToDelete.remove();\n  }\n});\n\nappendColButton.addEventListener('click', () => {\n  const tableRows = [...table.rows];\n\n  if (tableRows[0].children.length === 2) {\n    tableRows.forEach((row) => {\n      const cell = document.createElement('td');\n\n      row.appendChild(cell);\n    });\n    deleteColButton.removeAttribute('disabled');\n  } else if (tableRows[0].children.length === 9) {\n    tableRows.forEach((row) => {\n      const cell = document.createElement('td');\n\n      row.appendChild(cell);\n    });\n    appendColButton.setAttribute('disabled', true);\n  } else {\n    tableRows.forEach((row) => {\n      const cell = document.createElement('td');\n\n      row.appendChild(cell);\n    });\n  }\n});\n\ndeleteColButton.addEventListener('click', () => {\n  const tableRows = [...table.rows];\n\n  if (tableRows[0].children.length === 10) {\n    tableRows.forEach((row) => {\n      const cells = [...row.children];\n      const cellToRemove = cells[cells.length - 1];\n\n      cellToRemove.remove();\n    });\n    appendColButton.removeAttribute('disabled');\n  } else if (tableRows[0].children.length === 3) {\n    tableRows.forEach((row) => {\n      const cells = [...row.children];\n      const cellToRemove = cells[cells.length - 1];\n\n      cellToRemove.remove();\n    });\n    deleteColButton.setAttribute('disabled', true);\n  } else {\n    tableRows.forEach((row) => {\n      const cells = [...row.children];\n      const cellToRemove = cells[cells.length - 1];\n\n      cellToRemove.remove();\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","appendRowButton","document","querySelector","deleteRowButton","appendColButton","deleteColButton","table","addEventListener","tableRows","rows","removeAttribute","clonedRow","rowToAppend","cloneNode","appendChild","clonedRow1","rowToAppend1","clonedRow2","rowToAppend2","setAttribute","rowToDelete","remove","rowToDelete1","rowToDelete2","children","forEach","row","cell","createElement","cells","cellToRemove"],"version":3,"file":"index.22a7e90e.js.map"}